PORTED FUNCs LIST (34 of 36):

  CascadeClassifier::CascadeClassifier()
  CascadeClassifier::CascadeClassifier(string filename)
 void CascadeClassifier::detectMultiScale(Mat image, vector_Rect& objects, double scaleFactor = 1.1, int minNeighbors = 3, int flags = 0, Size minSize = Size(), Size maxSize = Size())
 void CascadeClassifier::detectMultiScale(Mat image, vector_Rect& objects, vector_int rejectLevels, vector_double levelWeights, double scaleFactor = 1.1, int minNeighbors = 3, int flags = 0, Size minSize = Size(), Size maxSize = Size(), bool outputRejectLevels = false)
 bool CascadeClassifier::empty()
 bool CascadeClassifier::load(string filename)
  HOGDescriptor::HOGDescriptor()
  HOGDescriptor::HOGDescriptor(Size _winSize, Size _blockSize, Size _blockStride, Size _cellSize, int _nbins, int _derivAperture = 1, double _winSigma = -1, int _histogramNormType = HOGDescriptor::L2Hys, double _L2HysThreshold = 0.2, bool _gammaCorrection = false, int _nlevels = HOGDescriptor::DEFAULT_NLEVELS)
  HOGDescriptor::HOGDescriptor(String filename)
 bool HOGDescriptor::checkDetectorSize()
 void HOGDescriptor::compute(Mat img, vector_float& descriptors, Size winStride = Size(), Size padding = Size(), vector_Point locations = vector<Point>())
 void HOGDescriptor::computeGradient(Mat img, Mat& grad, Mat& angleOfs, Size paddingTL = Size(), Size paddingBR = Size())
 void HOGDescriptor::detect(Mat img, vector_Point& foundLocations, vector_double& weights, double hitThreshold = 0, Size winStride = Size(), Size padding = Size(), vector_Point searchLocations = vector<Point>())
 void HOGDescriptor::detectMultiScale(Mat img, vector_Rect& foundLocations, vector_double& foundWeights, double hitThreshold = 0, Size winStride = Size(), Size padding = Size(), double scale = 1.05, double finalThreshold = 2.0, bool useMeanshiftGrouping = false)
static vector_float HOGDescriptor::getDaimlerPeopleDetector()
static vector_float HOGDescriptor::getDefaultPeopleDetector()
 size_t HOGDescriptor::getDescriptorSize()
 double HOGDescriptor::getWinSigma()
 bool HOGDescriptor::load(String filename, String objname = String())
 void HOGDescriptor::save(String filename, String objname = String())
 void HOGDescriptor::setSVMDetector(Mat _svmdetector)
Size HOGDescriptor::winSize
Size HOGDescriptor::blockSize
Size HOGDescriptor::blockStride
Size HOGDescriptor::cellSize
int HOGDescriptor::nbins
int HOGDescriptor::derivAperture
double HOGDescriptor::winSigma
int HOGDescriptor::histogramNormType
double HOGDescriptor::L2HysThreshold
bool HOGDescriptor::gammaCorrection
vector_float HOGDescriptor::svmDetector
int HOGDescriptor::nlevels
 void groupRectangles(vector_Rect& rectList, vector_int& weights, int groupThreshold, double eps = 0.2)

SKIPPED FUNCs LIST (2 of 36):

 void drawDataMatrixCodes(Mat& image, vector_string codes, Mat corners)
// Unknown type 'vector_string' (I), skipping the function

 void findDataMatrix(Mat image, vector_string& codes, Mat& corners = Mat(), vector_Mat& dmtx = vector_Mat())
// Unknown type 'vector_string' (O), skipping the function


0 def args - 13 funcs
1 def args - 3 funcs
2 def args - 2 funcs
3 def args - 1 funcs
4 def args - 1 funcs
5 def args - 1 funcs
6 def args - 3 funcs

class as MAP:
	

class SIMPLE:
	